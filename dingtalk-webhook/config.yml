global:
  smtp_smarthost: 'smtp.126.com:25'
  smtp_from: 'gavin_w@126.com'
  smtp_auth_username: 'gavin_w@126.com'

route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  #
  # To aggregate by all possible labels use '...' as the sole label name.
  # This effectively disables aggregation entirely, passing through all
  # alerts as-is. This is unlikely to be what you want, unless you have
  # a very low alert volume or your upstream notification system performs
  # its own grouping. Example: group_by: [...]
  group_by: ['alertname', 'cluster', 'service']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 5m

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 30m

  # A default receiver
  receiver: 'send_to_dingding_and_email'

receivers:
- name: send_to_dingding_and_email
  webhook_configs:
  - send_resolved: true
    url: http://dingtalk-webhook.marathon.l4lb.thisdcos.directory:8060/dingtalk/webhook1/send
  email_configs:
  - to: 'hge@mesosphere.com,chencw@paraview.cn,zgao@d2iq.com'
    send_resolved: true

templates:
- '/mnt/mesos/sandbox/config/alert.tmpl'
